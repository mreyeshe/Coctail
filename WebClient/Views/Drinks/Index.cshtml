@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Index";
}
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
</head>

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>

<h3> Coctails Drinks</h3>
<br />
<div class="container">
    <div id="event-handling">

        <div class="row">
            <div class="col-sm-6">
                <div class="row">
                    <div class="col-sm-8">
                        <div class="input-group input-group-sm mb-3">
                            <span class="input-group-text" id="inputGroup-sizing-sm">Search...</span>
                            <input type="text" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-sm" v-model="query">
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-sm-4">
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="typeSearchCheck" id="byName" value="ByName" v-model="typeSearch">
                            <label class="form-check-label" for="byName">
                                Search By Name
                            </label>
                        </div>
                    </div>
                    <div class="col-sm-8">
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="typeSearchCheck" value="ByIngredient" id="byIngredient" v-model="typeSearch">
                            <label class="form-check-label" for="byIngredient">
                                Search By Ingredient
                            </label>
                        </div>
                    </div>

                </div>
                <br />
                <div class="row">
                    <div class="col-sm-6">
                        <button v-on:click="Search" class="btn btn-success">Search for drinks</button>
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="row">
                    <h3 class="mx-auto" style="width: 300px;">
                        My Favorite Drinks
                    </h3>

                
                </div>
                <div class="row">
                    <div class="overflow-auto" style="max-height: 200px;">
                        <table class="table table-hover table-responsive">
                            <thead>
                                <tr>
                                    <th scope="col" style="width: 7%">Image</th>
                                    <th scope="col" style="width: 30%">Name Drink</th>
                                    <th scope="col" style="width: 35%"></th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr v-for="(item, n) in favoritList">
                                    <td scope="col">
                                        <img :src="item.strDrinkThumb" class="img-thumbnail float-start" />
                                    </td>
                                    <td scope="col">{{ item.strDrink }}</td>
                                    <td scope="col">
                                        <button type="button" class="btn btn-warning" v-on:click="DeleteFavorite(n)">Delete</button>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            
        </div>
        <br />
      
        <br />

        <table class="table table-striped">
            <thead>
                <tr>
                    <th scope="col" style="width: 7%">Image</th>
                    <th scope="col" style="width: 30%">Name</th>
                    <th scope="col" style="width: 10%">Id</th>
                    <th scope="col" style="width: 15%"></th>
                    <th scope="col" style="width: 20%"></th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="item in drinksList">
                    <td scope="col">
                        <img :src="item.strDrinkThumb" class="img-thumbnail float-start" />
                    </td>
                    <td scope="col">{{ item.strDrink }}</td>
                    <td scope="col">{{ item.idDrink }}</td>
                    <td scope="col">
                        <button type="button" class="btn btn-primary" v-on:click="Detail(item.idDrink)">Show Detail</button>
                    </td>
                    <td scope="col"><button type="button" class="btn btn-dark" v-on:click="AddFavorite(item)">Add to Favorite</button></td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <script src="https://unpkg.com/vue@next"></script>

    <script>
        const EventHandling = {
            data() {
                return {
                    query: '',
                    typeSearch: '',
                    info: '',
                    drinksList: [],
                    showModal: false,
                    favoritList: [],
                    drinkFavorite: null
                }
            },
            mounted() {
                if (localStorage.getItem('favoritList')) {
                    try {
                        this.favoritList = JSON.parse(localStorage.getItem("favoritList") || "[]");
                    } catch (e) {
                        localStorage.removeItem('favoritList');
                    }
                }
            },
            methods: {
                Search() {
                    if (this.query == '' || this.typeSearch == '') {
                        alert('Please, Fill all fields')
                    }
                    else {
                        axios
                            .get('https://localhost:44397/Drinks/SearchDrinks?query=' + this.query + '&typeSearch=' + this.typeSearch)
                            .then(response => (this.drinksList = response.data))
                    }
                },
                Detail(idDrink) {
                    window.open('https://localhost:44397/Drinks/Detail?idDrink=' + idDrink);
                },
                AddFavorite(newFavorite) {
                    var exists = this.favoritList.some(function (field) {
                        return field.idDrink === newFavorite.idDrink
                    });
                    if (!exists) {
                        this.favoritList.push(newFavorite);
                        this.saveFavorite();
                    }
                    else { alert('Upps, This drink already exist in your list ') }
                },
                DeleteFavorite(x) {
                    this.favoritList.splice(x, 1);
                    this.saveFavorite();
                },
                saveFavorite() {
                    const parsed = JSON.stringify(this.favoritList);
                    localStorage.setItem('favoritList', parsed);
                }
            }
        }

        const app = Vue.createApp(EventHandling).mount('#event-handling')
    </script>
}
